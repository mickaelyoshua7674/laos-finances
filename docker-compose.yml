version: "3.7"

services:

  db:
    networks:
      - postgres-network
    container_name: postgres-database
    image: postgres:16-alpine3.18 # alpine is a light version of Linux
    restart: always
    environment:
      - POSTGRES_USER=postgres # defining username
      - POSTGRES_PASSWORD=0000 # defining password
      - POSTGRES_DB=finances # name of default database created
      # this ENV variable is only required for the healthcheck section - if you don't specify it, the check command will fail stating the root user doesn't exist in posgres
      - PGUSER=postgres
    volumes:
      - ./database-data:/var/lib/postgresql/data # persistent data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # create tables automatically
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      # this command checks if the database is ready, right on the source db server
      test: pg_isready -d finances -h localhost -p 5432 -U postgres
      interval: 5s
      timeout: 10s
      retries: 5
      start_interval: 15s

  app:
    networks:
      - postgres-network
    container_name: finances
    build: .
    restart: always
    depends_on: # db will start before app
      db:
        condition: service_healthy
    environment:
      - DB_DRIVERNAME=postgresql
      - DB_ASYNC_DRIVERNAME=postgresql+asyncpg
      - DB_USERNAME=postgres
      - DB_PASSWORD=0000
      - DB_HOST=postgres-database # name given to db container
      - DB_PORT=5432
      - DB_NAME=finances
      - SERVER_PORT=8080
      - SECRET_KEY=eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJVc2VyIjoibGFvcyJ9.MvNzpRt3bxwP5EQkLX-aTxXFRm_IDU5DeooOnH0UvIk
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRES_SECONDS=172800 # 2 days
    volumes:
      - ./app:/app
    ports:
      - 8080:8080
    expose:
      - 8080
    command: python main.py
    # command: tail -F anything

  pgadmin:
    networks:
      - postgres-network
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - 15432:80
    volumes:
      - ./pgadmin-files:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    profiles: ["pgadmin"] # will run only if --profile pgadmin is called with docker compose up

networks:
  postgres-network:
    name: postgres-network